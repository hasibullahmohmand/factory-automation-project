@page "/chocolates"
@inject IJSRuntime JS
@inject IUnitOfWork unitOfWork
@rendermode InteractiveServer
@attribute [Authorize]
@inject NavigationManager Navigation


<PageTitle>Chocolates</PageTitle>

<div class="page-top">
    <div class="search-bar"> 
        <input type="search" @bind="searchText" name="search-bar" @onkeypress="OnKeyPress" placeholder="Search" />
        <button @onclick="() => Search(searchText)"><img src="/icons/find.png" /></button>
    </div>
    <div class="navigation-item">
        <NavLink href="order">
            <div class="order-icon">
                <img src="/icons/order.png" />
            </div> 
            <div>
                Order
            </div>
        </NavLink>
    </div>
    <div class="navigation-item">
        <NavLink href="cart">
            <div>
                <img src="/icons/shopping-cart.png" />
            </div> 
            <div>
                Cart
            </div>
        </NavLink>
    </div>
    <AuthorizeView Roles="ADMIN">
        <Authorized>
            <div class="navigation-item">
                <NavLink href="admin/products">
                    <div class="admin-icon">
                        <img src="/icons/users.png" />
                    </div>
                    <div>Admin</div>
                </NavLink>
            </div>
        </Authorized>
    </AuthorizeView>
    <div class="navigation-item">
        <NavLink href="logoutcontrol">
            <div class="logout-icon">
                <img src="/icons/logout.png" />
            </div>
            <div>
                Logout
            </div>
        </NavLink>
    </div>
</div>


@if (!String.IsNullOrEmpty(errorMessage))
{
<div class="alert alert-danger message" role="alert">
    <i class="fas fa-exclamation-circle"></i>
    @errorMessage
</div>
}

@if (!String.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-info message" role="alert">
        <i class="fas fa-check-circle"></i>
        @successMessage
    </div>
}
<h3 class="heading">Chocolates</h3>
<div class="main-container">
    @if (_products == null && _products?.Count == 0)
    {
        <p>
            <em> Loading...</em>
        </p>
    }
    else
    {
        @foreach (var product in _products)
        {
            <div class="product-container">
                <div class="product-img">
                    <img src="@product.ImageUrl" alt="Product Image" />
                </div>
                <div class="product-name">
                    <b>@product.Name</b>
                </div>
                <div class="product-price">
                    @product.Price TL
                </div>
                <div class="product-detail">
                    @product.Description
                </div>
                <button class="btn btn-outline-info btn-primary text-light" @onclick="() => AddToCart(product.Id)">
                    <i class="fas fa-shopping-cart me-2"></i> Add To Cart
                </button>
            </div>
        }
    }
</div>


@code {
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;
    private List<ResultProductDto> _products = [];
    private CreateCartDto createCartDto = new();
    private string searchText = "";

    protected override async Task OnInitializedAsync()
    {
        _products = await unitOfWork.ProductService.GetProductByCateogryIdAsync(1);
        // 1 for the chocolates category
    }

    private async Task AddToCart(int productId)
    {
        createCartDto.productId = productId;
        var result = await unitOfWork.CartService.CreateCartAsync(createCartDto);
        if (!result)
        {
            errorMessage = "An error occured!";
            StateHasChanged();
        }
        else
        {
            successMessage = "Product added to cart!";
            StateHasChanged();
        }
    }

    private void Search(string searchText)
    {
        Navigation.NavigateTo($"/search/{searchText}");
    }

    private void OnKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            Search(searchText);
        }
    }
}

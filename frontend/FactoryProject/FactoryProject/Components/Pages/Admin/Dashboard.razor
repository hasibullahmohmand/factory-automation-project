@page "/admin/dashboard"
@layout AdminLayout
@attribute [Authorize(Roles ="ADMIN")]
@rendermode InteractiveServer
@inject IUnitOfWork _unitOfWork


<PageTitle> Dashboard </PageTitle>

<div class="title-dashboard">
    <h4 class="text-center" style="position:relative; top:25%;"> <i class="fas fa-tachometer-alt"></i> Dashboard </h4>
</div>

<div class="container m-2 mt-4">
    <div class="row mt-5">
        <div class="col-lg-4 col-md-6 col-sm-12 mt-2">
            <div class="card carte personal bg-info">
                <div class="card-body ">
                    <h4 class="text-center">
                        <span class="fs-4 text-light text-nowrap"> Total Personal </span>
                    </h4>
                    <br />
                    <h4 class="text-center text-nowrap">
                        <span class="fs-4 fw-bolder text-warning"><i class="fas fa-users me-2"></i> @personalCount </span>
                    </h4>
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-md-6 col-sm-12 mt-2">
            <div class="card carte ">
                <div class="card-body">
                    <h4 class="text-center">
                        <span class="fs-4 text-center text-info"> Total Revenue </span>  
                    </h4>
                    <br />
                    <h4 class="text-center">
                        <span class="fs-4 fw-bolder text-center text-warning"><i class="fas fa-money-check-alt"></i> @revenue ₺ </span>
                    </h4>
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-md-6 col-sm-12 mt-2">
            <div class="card carte order bg-warning">
                <div class="card-body">
                    <h4 class="text-center text-nowrap">
                        <span class="fs-4  text-primary"> Total Order </span>

                    </h4>
                    <br />
                    <h4 class="text-center text-nowrap">
                        <span class="fs-4 fw-bolder text-center text-light" ><i class="fas fa-box-open me-2"></i> @orderCount </span> 

                    </h4>
                </div>
            </div>
        </div>

    </div>
    <div class="row my-3 mt-5">
        <div class="col-lg-6 col-sm-12 mt-lg-5 mt-sm-3">
            <h4 class="text-center mb-2">
                <button type="button" class="btn btn-info text-light fw-bolder position-relative">
                     Pending Orders
                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                        @_pendingOrders.Count
                    </span>
                </button>
            </h4>
            <div class="table-responsive tableau">
                <table class="table table-hover tablle-stripped">
                    <thead class="rounded-3 table-header">
                        <tr>
                            <th>N°</th>
                            <th>Customer</th>
                            <th>Status</th>
                            <th>Order On</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            count_pending=0;
                        }
                        @foreach(var order in _pendingOrders)
                        {
                            count_pending++;
                            <tr>
                                <th>@count_pending</th>
                                <td>@order.username</td>
                                <td>
                                    @if(order.delivered)
                                    {
                                        <span class="badge rounded-pill text-bg-info text-light">Delivered</span>
                                    }
                                    else{
                                        <span class="badge rounded-pill text-bg-warning text-light">Pending...</span>
                                    }
                                </td>
                                <td>@order.orderDate.ToString()</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="col-lg-6 col-sm-12 mt-lg-5 mt-sm-3">
            <h4 class="text-center mb-2">
                <button type="button" class="btn btn-info fw-bolder text-light position-relative">
                    Most Ordered Products
                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                        @_topProducts.Count
                    </span>
                </button>
            </h4>
            <div class="table-responsive tableau">
                <table class="table table-hover tablle-stripped">
                    <thead class="rounded-3 table-header">
                        <tr>
                            <th>N°</th>
                            <th>Products Name</th>
                            <th>Total Order</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            count_topProducts=0;
                        }
                        @foreach(var top in _topProducts)
                        {
                            count_topProducts++;
                            <tr>
                                <th>@count_topProducts</th>
                                <td>@top.name</td>
                                <td>
                                    @top.orderCount
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>



    </div>
</div>





@code {
    private int personalCount;
    private int orderCount;
    private List<PendingOrderDto> _pendingOrders=[];
    private int count_pending;
    private List<TopProductDto> _topProducts=[];
    private int count_topProducts;
    private double revenue;
    protected override async Task OnInitializedAsync()
    {
        personalCount = (await _unitOfWork.PersonalService.GetAllPersonalAsync()).Count;
        orderCount = (await _unitOfWork.OrderService.GetAllOrderAsync()).Count;
        _pendingOrders=await _unitOfWork.OrderService.GetPendingOrdersAsync();
        _topProducts=await _unitOfWork.OrderService.GetTopProductsAsync();
        revenue = await _unitOfWork.OrderService.GetTotalRevenueAsync();
    }


}
